#+TITLE: Git 常用命令使用笔记

#+BEGIN_QUOTE
NOTE:
1. 经常使用的git使用命令
#+END_QUOTE

** 命令列表

| 命令          | 简要说明                  |
|---------------+---------------------------|
| git init      | 初始化新建仓库            |
| git clone     | 克隆远程仓库              |
| git add       | 添加到暂存区              |
| git commit    | 提交并记录仓库更改信息    |
| git push      | 推送至远程版本库          |
| git pull      | 拉回远程版本库的最新版本  |
| git branch    | 查看分支信息              |
| git config    | 配置相关信息              |
| git rm        | 删除暂存区和工作区文件    |
| git diff      | 查看尚未暂存的更新内容    |
| git status    | 查看当前暂存区和工作区状态|
| git log       | 查看提交日志              |
| git checkout  | 切换分支                  |

*** 一、新建代码库

#+BEGIN_SRC git
#在当前目录新建一个Git代码库
git init

#新建一个目录，将其初始化为Git代码库
git init [project-name]

#下载一个项目和它的整个代码历史
git clone [url]

#+END_SRC

*** 二、配置
      Git的设置文件为.gitconfig,它可以在用户主目录下(全局配置),也可以在项目目录下(项目配置)。

#+BEGIN_SRC git
#显示当前的Git配置
git config --list

#编辑Git配置文件
git config -e [--global]

#设置提交代码时的用户信息
git config [--global] user.name "[name]"
git config [--global] user.email "[email address]"

#+END_SRC

*** 三、增加和删除文件

#+BEGIN_SRC git

#添加指定文件到暂存区
git add [file1] [file2] ...

#添加指定目录到暂存区，包括子目录
git add [dir]

#添加当前目录的所有文件到暂存区
git add .

#添加每个变化前，都会要求确认
#对于同一个文件的多处变化，可以实现分次提交
git add -p

#删除工作区文件，并且将这次删除放入暂存区
git rm [file1] [file2] ...

#停止追踪指定文件，但该文件会保留在工作区
git rm --cached [file]

#+END_SRC

*** 四、代码提交

#+BEGIN_SRC git

#提交暂存区到仓库区
git commit -m [message]

#提交暂存区的指定文件到仓库区
git commit [file1] [file2] ... -m [message]

#提交工作区自上次commit之后的变化，直接到仓库区
git commit -a

#提交时显示所有diff信息
git commit -v

#+END_SRC

*** 五、分支

#+BEGIN_SRC git

#列出所有本地分支
git branch

#列出所有本地分支和远程分支
git branch -a

#新建一个分支，但依然停留在当前分支
git branch [branch-name]

#新建一个分支，并切换到该分支
git checkout -b [branch]

#切换到指定分支，并更新工作区
git checkout [branch-name]

#合并指定分支到当前分支
git merge [branch]

#+END_SRC

*** 六、查看信息

#+BEGIN_SRC git

#显示有变更的文件
git status

#显示当前分支的版本历史
git log

#显示暂存区和工作区的差异
git diff

#显示某次提交的元数据和内容变化
git show [commit]

#+END_SRC

*** 七、远程操作

#+BEGIN_SRC git

#显示所有远程仓库
git remote -v

#增加一个新的远程仓库，并命名
git remote add [shortname] [url]

#取回远程仓库的变化，并与本地分支合并
git pull [remote] [branch]

#上传本地指定分支到远程仓库
git push [remote] [branch]

#强行推送当前分支到远程仓库，即使有冲突
git push [remote] --force

#推送所有分支到远程仓库
git push [remote] --all

#+END_SRC

*** 八、撤销

#+BEGIN_SRC git

#恢复暂存区的指定文件到工作区
git checkout [file]

#恢复某个commit的指定文件到暂存区和工作区
git checkout [commit] [file]

#恢复暂存区的所有文件到工作区
git checkout .

#重置暂存区的指定文件，与上一次commit保持一致，但工作区不变
git reset [file]

#+END_SRC
